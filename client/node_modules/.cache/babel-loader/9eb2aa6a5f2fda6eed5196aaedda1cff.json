{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/SLAES/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/SLAES/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/SLAES/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/SLAES/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/SLAES/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/ubuntu/SLAES/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _objectWithoutProperties from \"/home/ubuntu/SLAES/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/ubuntu/SLAES/client/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\"; // import LoginForm from './components/Login/LoginForm'\n\nimport LoginForm from \"./layouts/Auth/Auth.jsx\";\nimport AdminLayout from \"./layouts/Admin/Admin.jsx\"; // import \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"./assets/scss/paper-dashboard.scss\";\nimport \"./assets/demo/demo.css\";\nvar hist = createBrowserHistory();\n\nvar PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      return props.isloggedIn === true ? React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: {\n          pathname: '/',\n          state: {\n            from: props.location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n};\n/*The <Route> component is the main part of React Router. Anywhere that you want to only render content based on the locationâ€™s pathname, you should use a <Route> element. */\n\n/* The Route component expects a path prop, which is a string that describes the pathname that the route matches */\n\n/* The <Switch> will iterate over routes and only render the first one that matches the current pathname */\n\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      loggedIn: true,\n      user: null\n    };\n    _this._logout = _this._logout.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._login = _this._login.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/auth/user').then(function (response) {\n        console.log(response.data);\n\n        if (!!response.data.user) {\n          console.log('THERE IS A USER');\n\n          _this2.setState({\n            loggedIn: true,\n            user: response.data.user\n          });\n        } else {\n          _this2.setState({\n            loggedIn: false,\n            user: null\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_logout\",\n    value: function _logout(event) {\n      var _this3 = this;\n\n      event.preventDefault();\n      console.log('logging out');\n      axios.post('/auth/logout').then(function (response) {\n        console.log(response.data);\n\n        if (response.status === 200) {\n          _this3.setState({\n            loggedIn: false,\n            user: null\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_login\",\n    value: function _login(username, password) {\n      var _this4 = this;\n\n      axios.post('/auth/login', {\n        username: username,\n        password: password\n      }).then(function (response) {\n        console.log(response);\n\n        if (response.status === 200) {\n          // update the state\n          _this4.setState({\n            loggedIn: true,\n            user: response.data.user\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Router, {\n        history: hist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        render: function render() {\n          return React.createElement(LoginForm, {\n            _login: _this5._login,\n            _googleSignin: _this5._googleSignin,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        loggedIn: this.state.loggedIn,\n        path: \"/\",\n        component: AdminLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/ubuntu/SLAES/client/src/App.js"],"names":["React","Component","axios","ReactDOM","createBrowserHistory","Router","Route","Switch","Redirect","serviceWorker","LoginForm","AdminLayout","hist","PrivateRoute","component","rest","props","isloggedIn","pathname","state","from","location","App","loggedIn","user","_logout","bind","_login","get","then","response","console","log","data","setState","event","preventDefault","post","status","username","password","_googleSignin"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgCC,QAAhC,QAAgD,kBAAhD;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CACA;;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CAEA;;AACA,OAAO,oCAAP;AACA,OAAO,wBAAP;AAEA,IAAMC,IAAI,GAAGR,oBAAoB,EAAjC;;AAEA,IAAMS,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAcZ,SAAd,QAAGa,SAAH;AAAA,MAA4BC,IAA5B;;AAAA,SACnB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aACvBA,KAAK,CAACC,UAAN,KAAqB,IAArB,GACI,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,GAEI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AACZE,UAAAA,QAAQ,EAAE,GADE;AAEZC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd;AAFK,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHmB;AAAA,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADmB;AAAA,CAArB;AAUA;;AAEA;;AAEA;;;IAEMC,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKH,KAAL,GAAa;AACZI,MAAAA,QAAQ,EAAE,IADE;AAEZC,MAAAA,IAAI,EAAE;AAFM,KAAb;AAIA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,uDAAf;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,uDAAd;AAPY;AAQZ;;;;wCAEmB;AAAA;;AACnBxB,MAAAA,KAAK,CAAC0B,GAAN,CAAU,YAAV,EAAwBC,IAAxB,CAA6B,UAAAC,QAAQ,EAAI;AACxCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;;AACA,YAAI,CAAC,CAACH,QAAQ,CAACG,IAAT,CAAcT,IAApB,EAA0B;AACzBO,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,UAAA,MAAI,CAACE,QAAL,CAAc;AACbX,YAAAA,QAAQ,EAAE,IADG;AAEbC,YAAAA,IAAI,EAAEM,QAAQ,CAACG,IAAT,CAAcT;AAFP,WAAd;AAIA,SAND,MAMO;AACN,UAAA,MAAI,CAACU,QAAL,CAAc;AACbX,YAAAA,QAAQ,EAAE,KADG;AAEbC,YAAAA,IAAI,EAAE;AAFO,WAAd;AAIA;AACD,OAdD;AAeA;;;4BAEOW,K,EAAO;AAAA;;AACdA,MAAAA,KAAK,CAACC,cAAN;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA9B,MAAAA,KAAK,CAACmC,IAAN,CAAW,cAAX,EAA2BR,IAA3B,CAAgC,UAAAC,QAAQ,EAAI;AAC3CC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;;AACA,YAAIH,QAAQ,CAACQ,MAAT,KAAoB,GAAxB,EAA6B;AAC5B,UAAA,MAAI,CAACJ,QAAL,CAAc;AACbX,YAAAA,QAAQ,EAAE,KADG;AAEbC,YAAAA,IAAI,EAAE;AAFO,WAAd;AAIA;AACD,OARD;AASA;;;2BAEMe,Q,EAAUC,Q,EAAU;AAAA;;AAC1BtC,MAAAA,KAAK,CACHmC,IADF,CACO,aADP,EACsB;AACpBE,QAAAA,QAAQ,EAARA,QADoB;AAEpBC,QAAAA,QAAQ,EAARA;AAFoB,OADtB,EAKEX,IALF,CAKO,UAAAC,QAAQ,EAAI;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,YAAIA,QAAQ,CAACQ,MAAT,KAAoB,GAAxB,EAA6B;AAC5B;AACA,UAAA,MAAI,CAACJ,QAAL,CAAc;AACbX,YAAAA,QAAQ,EAAE,IADG;AAEbC,YAAAA,IAAI,EAAEM,QAAQ,CAACG,IAAT,CAAcT;AAFP,WAAd;AAIA;AACD,OAdF;AAeD;;;6BAGQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAEZ,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,QAAlB;AACE,QAAA,MAAM,EAAE;AAAA,iBAAM,oBAAC,SAAD;AAAW,YAAA,MAAM,EAAE,MAAI,CAACe,MAAxB;AAAgC,YAAA,aAAa,EAAE,MAAI,CAACc,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAAA,SADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIE,oBAAC,YAAD;AAAc,QAAA,QAAQ,EAAE,KAAKtB,KAAL,CAAWI,QAAnC;AAA6C,QAAA,IAAI,EAAC,GAAlD;AAAsD,QAAA,SAAS,EAAEZ,WAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADA,CADA,CADF;AAYD;;;;EA3EeV,S;;AA8ElB,eAAeqB,GAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport ReactDOM from \"react-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n// import LoginForm from './components/Login/LoginForm'\r\nimport LoginForm from \"./layouts/Auth/Auth.jsx\";\r\nimport AdminLayout from \"./layouts/Admin/Admin.jsx\";\r\n\r\n// import \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./assets/scss/paper-dashboard.scss\";\r\nimport \"./assets/demo/demo.css\";\r\n\r\nconst hist = createBrowserHistory();\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route {...rest} render={(props) => (\r\n    props.isloggedIn === true\r\n      ? <Component {...props} />\r\n      : <Redirect to={{\r\n          pathname: '/',\r\n          state: { from: props.location }\r\n        }} />\r\n  )} />\r\n)\r\n/*The <Route> component is the main part of React Router. Anywhere that you want to only render content based on the locationâ€™s pathname, you should use a <Route> element. */\r\n\r\n/* The Route component expects a path prop, which is a string that describes the pathname that the route matches */\r\n\r\n/* The <Switch> will iterate over routes and only render the first one that matches the current pathname */\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n  \t\tsuper()\r\n  \t\tthis.state = {\r\n  \t\t\tloggedIn: true,\r\n  \t\t\tuser: null\r\n  \t\t}\r\n  \t\tthis._logout = this._logout.bind(this)\r\n  \t\tthis._login = this._login.bind(this)\r\n  \t}\r\n\r\n  \tcomponentDidMount() {\r\n  \t\taxios.get('/auth/user').then(response => {\r\n  \t\t\tconsole.log(response.data)\r\n  \t\t\tif (!!response.data.user) {\r\n  \t\t\t\tconsole.log('THERE IS A USER')\r\n  \t\t\t\tthis.setState({\r\n  \t\t\t\t\tloggedIn: true,\r\n  \t\t\t\t\tuser: response.data.user\r\n  \t\t\t\t})\r\n  \t\t\t} else {\r\n  \t\t\t\tthis.setState({\r\n  \t\t\t\t\tloggedIn: false,\r\n  \t\t\t\t\tuser: null\r\n  \t\t\t\t})\r\n  \t\t\t}\r\n  \t\t})\r\n  \t}\r\n\r\n  \t_logout(event) {\r\n  \t\tevent.preventDefault()\r\n  \t\tconsole.log('logging out')\r\n  \t\taxios.post('/auth/logout').then(response => {\r\n  \t\t\tconsole.log(response.data)\r\n  \t\t\tif (response.status === 200) {\r\n  \t\t\t\tthis.setState({\r\n  \t\t\t\t\tloggedIn: false,\r\n  \t\t\t\t\tuser: null\r\n  \t\t\t\t})\r\n  \t\t\t}\r\n  \t\t})\r\n  \t}\r\n\r\n  \t_login(username, password) {\r\n  \t\taxios\r\n  \t\t\t.post('/auth/login', {\r\n  \t\t\t\tusername,\r\n  \t\t\t\tpassword\r\n  \t\t\t})\r\n  \t\t\t.then(response => {\r\n  \t\t\t\tconsole.log(response)\r\n  \t\t\t\tif (response.status === 200) {\r\n  \t\t\t\t\t// update the state\r\n  \t\t\t\t\tthis.setState({\r\n  \t\t\t\t\t\tloggedIn: true,\r\n  \t\t\t\t\t\tuser: response.data.user\r\n  \t\t\t\t\t})\r\n  \t\t\t\t}\r\n  \t\t\t})\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n      <Router history={hist}>\r\n      <Switch>\r\n        <Route exact path=\"/login\"\r\n          render={() => <LoginForm _login={this._login} _googleSignin={this._googleSignin} />}\r\n         />\r\n        <PrivateRoute loggedIn={this.state.loggedIn} path='/' component={AdminLayout} />\r\n      </Switch>\r\n      </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}