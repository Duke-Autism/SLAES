{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/SLAES/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/SLAES/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/SLAES/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/SLAES/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/SLAES/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/SLAES/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Header } from \"./global/header\";\nimport PlaceOrder from \"./main/PlaceOrder\";\nimport UpdatePredicted from \"./main/UpdatePredicted\";\nimport Kitchen from \"./main/Kitchen\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport AuthLayout from \"layouts/Auth/Auth.jsx\";\nimport AdminLayout from \"layouts/Admin/Admin.jsx\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss\";\nimport \"assets/demo/demo.css\";\nvar hist = createBrowserHistory();\n/*The <Route> component is the main part of React Router. Anywhere that you want to only render content based on the location’s pathname, you should use a <Route> element. */\n\n/* The Route component expects a path prop, which is a string that describes the pathname that the route matches */\n\n/* The <Switch> will iterate over routes and only render the first one that matches the current pathname */\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Router, {\n        history: hist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/auth\",\n        render: function render(props) {\n          return React.createElement(AuthLayout, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/admin\",\n        render: function render(props) {\n          return React.createElement(AdminLayout, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        from: \"/\",\n        to: \"/admin/dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/ubuntu/SLAES/src/App.js"],"names":["React","Component","Header","PlaceOrder","UpdatePredicted","Kitchen","ReactDOM","createBrowserHistory","Router","Route","Switch","Redirect","serviceWorker","AuthLayout","AdminLayout","hist","App","props"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgCC,QAAhC,QAAgD,kBAAhD;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,OAAO,kCAAP;AACA,OAAO,kCAAP;AACA,OAAO,sBAAP;AAEA,IAAMC,IAAI,GAAGR,oBAAoB,EAAjC;AAEA;;AAEA;;AAEA;;IAEMS,G;;;;;;;;;;;;;6BACK;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAED,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,MAAM,EAAE,gBAAAE,KAAK;AAAA,iBAAI,oBAAC,UAAD,oBAAgBA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAJ;AAAA,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,MAAM,EAAE,gBAAAA,KAAK;AAAA,iBAAI,oBAAC,WAAD,oBAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAJ;AAAA,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,GAAf;AAAmB,QAAA,EAAE,EAAC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF,CADA,CADF;AAWD;;;;EAbehB,S;;AAgBlB,eAAee,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Header } from \"./global/header\";\r\nimport PlaceOrder from \"./main/PlaceOrder\";\r\nimport UpdatePredicted from \"./main/UpdatePredicted\";\r\nimport Kitchen from \"./main/Kitchen\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport AuthLayout from \"layouts/Auth/Auth.jsx\";\r\nimport AdminLayout from \"layouts/Admin/Admin.jsx\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"assets/scss/paper-dashboard.scss\";\r\nimport \"assets/demo/demo.css\";\r\n\r\nconst hist = createBrowserHistory();\r\n\r\n/*The <Route> component is the main part of React Router. Anywhere that you want to only render content based on the location’s pathname, you should use a <Route> element. */\r\n\r\n/* The Route component expects a path prop, which is a string that describes the pathname that the route matches */\r\n\r\n/* The <Switch> will iterate over routes and only render the first one that matches the current pathname */\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n      <Router history={hist}>\r\n        <Switch>\r\n          <Route path=\"/auth\" render={props => <AuthLayout {...props} />} />\r\n          <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\r\n          <Redirect from=\"/\" to=\"/admin/dashboard\" />\r\n        </Switch>\r\n      </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}