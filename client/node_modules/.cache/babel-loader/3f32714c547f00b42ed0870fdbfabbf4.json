{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/SLAES/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/SLAES/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/SLAES/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/SLAES/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/SLAES/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/SLAES/client/src/components/Navbars/AdminNavbar.jsx\";\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport { Button, Collapse, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown, Form, Input, InputGroupAddon, InputGroupText, InputGroup, NavbarBrand, Navbar, NavItem, NavLink, Nav, Container } from \"reactstrap\";\n\nvar AdminNavbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AdminNavbar, _React$Component);\n\n  function AdminNavbar(props) {\n    var _this;\n\n    _classCallCheck(this, AdminNavbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminNavbar).call(this, props));\n\n    _this.updateColor = function () {\n      if (window.innerWidth < 993 && _this.state.collapseOpen) {\n        _this.setState({\n          color: \"bg-white\"\n        });\n      } else {\n        _this.setState({\n          color: \"navbar-transparent\"\n        });\n      }\n    };\n\n    _this.toggleSidebar = function () {\n      document.documentElement.classList.toggle(\"nav-open\");\n    };\n\n    _this.toggleCollapse = function () {\n      var newState = {\n        collapseOpen: !_this.state.collapseOpen\n      };\n\n      if (!_this.state.collapseOpen) {\n        newState[\"color\"] = \"bg-white\";\n      } else {\n        newState[\"color\"] = \"navbar-transparent\";\n      }\n\n      _this.setState(newState);\n    };\n\n    _this.state = {\n      collapseOpen: false,\n      color: \"navbar-transparent\"\n    };\n    return _this;\n  }\n\n  _createClass(AdminNavbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateColor);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (window.outerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf(\"nav-open\") !== -1) {\n        document.documentElement.classList.toggle(\"nav-open\");\n      }\n    } // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Navbar, {\n        className: classnames(\"navbar-absolute fixed-top\", this.state.color),\n        expand: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-minimize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-icon btn-round\",\n        color: \"default\",\n        id: \"minimizeSidebar\",\n        onClick: this.props.handleMiniClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"nc-icon nc-minimal-right text-center visible-on-sidebar-mini\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"nc-icon nc-minimal-left text-center visible-on-sidebar-regular\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: classnames(\"navbar-toggle\", {\n          toggled: this.state.sidebarOpen\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"navbar-toggler\",\n        type: \"button\",\n        onClick: this.toggleSidebar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }))), React.createElement(NavbarBrand, {\n        href: \"#pablo\",\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"d-none d-md-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Severe Adverse Event Log\"), React.createElement(\"span\", {\n        className: \"d-block d-md-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \" \"))), React.createElement(\"button\", {\n        \"aria-controls\": \"navigation-index\",\n        \"aria-expanded\": this.state.collapseOpen,\n        \"aria-label\": \"Toggle navigation\",\n        className: \"navbar-toggler\" // data-target=\"#navigation\"\n        ,\n        \"data-toggle\": \"collapse\",\n        type: \"button\",\n        onClick: this.toggleCollapse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(Collapse, {\n        className: \"justify-content-end\",\n        navbar: true,\n        isOpen: this.state.collapseOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: \"no-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Input, {\n        defaultValue: \"\",\n        placeholder: \"Search...\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"nc-icon nc-zoom-split\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }))))), React.createElement(Nav, {\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: \"btn-magnify\",\n        href: \"#pablo\",\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"nc-icon nc-layout-11\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"d-lg-none d-md-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Stats\")))), React.createElement(UncontrolledDropdown, {\n        className: \"btn-rotate\",\n        nav: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        \"aria-haspopup\": true,\n        caret: true,\n        color: \"default\",\n        \"data-toggle\": \"dropdown\",\n        id: \"navbarDropdownMenuLink\",\n        nav: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"nc-icon nc-bell-55\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"d-lg-none d-md-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Some Actions\"))), React.createElement(DropdownMenu, {\n        \"aria-labelledby\": \"navbarDropdownMenuLink\",\n        right: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        href: \"#pablo\",\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Action\"), React.createElement(DropdownItem, {\n        href: \"#pablo\",\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Another action\"), React.createElement(DropdownItem, {\n        href: \"#pablo\",\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Something else here\"))), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: \"btn-rotate\",\n        href: \"#pablo\",\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"nc-icon nc-settings-gear-65\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"d-lg-none d-md-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Account\")))))))));\n    }\n  }]);\n\n  return AdminNavbar;\n}(React.Component);\n\nexport default AdminNavbar;","map":{"version":3,"sources":["/home/ubuntu/SLAES/client/src/components/Navbars/AdminNavbar.jsx"],"names":["React","classnames","Button","Collapse","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledDropdown","Form","Input","InputGroupAddon","InputGroupText","InputGroup","NavbarBrand","Navbar","NavItem","NavLink","Nav","Container","AdminNavbar","props","updateColor","window","innerWidth","state","collapseOpen","setState","color","toggleSidebar","document","documentElement","classList","toggle","toggleCollapse","newState","addEventListener","e","outerWidth","history","location","pathname","className","indexOf","handleMiniClick","toggled","sidebarOpen","preventDefault","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      color: \"navbar-transparent\"\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n  componentDidUpdate(e) {\n    if (\n      window.outerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n  }\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\n      this.setState({\n        color: \"bg-white\"\n      });\n    } else {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    }\n  };\n  // this function opens and closes the sidebar on small devices\n  toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n  };\n  // this function opens and closes the collapse on small devices\n  // it also adds navbar-transparent class to the navbar when closed\n  // ad bg-white when opened\n  toggleCollapse = () => {\n    let newState = {\n      collapseOpen: !this.state.collapseOpen\n    };\n    if (!this.state.collapseOpen) {\n      newState[\"color\"] = \"bg-white\";\n    } else {\n      newState[\"color\"] = \"navbar-transparent\";\n    }\n    this.setState(newState);\n  };\n  render() {\n    return (\n      <>\n        <Navbar\n          className={classnames(\"navbar-absolute fixed-top\", this.state.color)}\n          expand=\"lg\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <div className=\"navbar-minimize\">\n                <Button\n                  className=\"btn-icon btn-round\"\n                  color=\"default\"\n                  id=\"minimizeSidebar\"\n                  onClick={this.props.handleMiniClick}\n                >\n                  <i className=\"nc-icon nc-minimal-right text-center visible-on-sidebar-mini\" />\n                  <i className=\"nc-icon nc-minimal-left text-center visible-on-sidebar-regular\" />\n                </Button>\n              </div>\n              <div\n                className={classnames(\"navbar-toggle\", {\n                  toggled: this.state.sidebarOpen\n                })}\n              >\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={this.toggleSidebar}\n                >\n                  <span className=\"navbar-toggler-bar bar1\" />\n                  <span className=\"navbar-toggler-bar bar2\" />\n                  <span className=\"navbar-toggler-bar bar3\" />\n                </button>\n              </div>\n              <NavbarBrand href=\"#pablo\" onClick={e => e.preventDefault()}>\n                <span className=\"d-none d-md-block\">\n                  Severe Adverse Event Log\n                </span>\n                <span className=\"d-block d-md-none\"> </span>\n              </NavbarBrand>\n            </div>\n            <button\n              aria-controls=\"navigation-index\"\n              aria-expanded={this.state.collapseOpen}\n              aria-label=\"Toggle navigation\"\n              className=\"navbar-toggler\"\n              // data-target=\"#navigation\"\n              data-toggle=\"collapse\"\n              type=\"button\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n            <Collapse\n              className=\"justify-content-end\"\n              navbar\n              isOpen={this.state.collapseOpen}\n            >\n              <Form>\n                <InputGroup className=\"no-border\">\n                  <Input defaultValue=\"\" placeholder=\"Search...\" type=\"text\" />\n                  <InputGroupAddon addonType=\"append\">\n                    <InputGroupText>\n                      <i className=\"nc-icon nc-zoom-split\" />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                </InputGroup>\n              </Form>\n              <Nav navbar>\n                <NavItem>\n                  <NavLink\n                    className=\"btn-magnify\"\n                    href=\"#pablo\"\n                    onClick={e => e.preventDefault()}\n                  >\n                    <i className=\"nc-icon nc-layout-11\" />\n                    <p>\n                      <span className=\"d-lg-none d-md-block\">Stats</span>\n                    </p>\n                  </NavLink>\n                </NavItem>\n                <UncontrolledDropdown className=\"btn-rotate\" nav>\n                  <DropdownToggle\n                    aria-haspopup={true}\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    id=\"navbarDropdownMenuLink\"\n                    nav\n                  >\n                    <i className=\"nc-icon nc-bell-55\" />\n                    <p>\n                      <span className=\"d-lg-none d-md-block\">Some Actions</span>\n                    </p>\n                  </DropdownToggle>\n                  <DropdownMenu aria-labelledby=\"navbarDropdownMenuLink\" right>\n                    <DropdownItem\n                      href=\"#pablo\"\n                      onClick={e => e.preventDefault()}\n                    >\n                      Action\n                    </DropdownItem>\n                    <DropdownItem\n                      href=\"#pablo\"\n                      onClick={e => e.preventDefault()}\n                    >\n                      Another action\n                    </DropdownItem>\n                    <DropdownItem\n                      href=\"#pablo\"\n                      onClick={e => e.preventDefault()}\n                    >\n                      Something else here\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <NavItem>\n                  <NavLink\n                    className=\"btn-rotate\"\n                    href=\"#pablo\"\n                    onClick={e => e.preventDefault()}\n                  >\n                    <i className=\"nc-icon nc-settings-gear-65\" />\n                    <p>\n                      <span className=\"d-lg-none d-md-block\">Account</span>\n                    </p>\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n"]},"metadata":{},"sourceType":"module"}