{"ast":null,"code":"import _defineProperty from \"/home/ubuntu/SLAES/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/ubuntu/SLAES/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/ubuntu/SLAES/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/SLAES/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/SLAES/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/SLAES/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/SLAES/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/SLAES/src/components/Sidebar/Sidebar.jsx\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav, Collapse } from \"reactstrap\"; // javascript plugin used to create scrollbars on windows\n\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport avatar from \"assets/img/faces/ahealth.png\";\nimport logo from \"assets/img/react-logo.png\";\nvar ps;\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Sidebar, _React$Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _classCallCheck(this, Sidebar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sidebar).call(this, props));\n\n    _this.getCollapseStates = function (routes) {\n      var initialState = {};\n      routes.map(function (prop, key) {\n        if (prop.collapse) {\n          initialState = _objectSpread(_defineProperty({}, prop.state, _this.getCollapseInitialState(prop.views)), _this.getCollapseStates(prop.views), initialState);\n        }\n\n        return null;\n      });\n      return initialState;\n    };\n\n    _this.createLinks = function (routes) {\n      return routes.map(function (prop, key) {\n        if (prop.redirect) {\n          return null;\n        }\n\n        if (prop.collapse) {\n          var st = {};\n          st[prop[\"state\"]] = !_this.state[prop.state];\n          return React.createElement(\"li\", {\n            className: _this.getCollapseInitialState(prop.views) ? \"active\" : \"\",\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"#pablo\",\n            \"data-toggle\": \"collapse\",\n            \"aria-expanded\": _this.state[prop.state],\n            onClick: function onClick(e) {\n              e.preventDefault();\n\n              _this.setState(st);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, prop.icon !== undefined ? React.createElement(React.Fragment, null, React.createElement(\"i\", {\n            className: prop.icon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, prop.name, React.createElement(\"b\", {\n            className: \"caret\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }))) : React.createElement(React.Fragment, null, React.createElement(\"span\", {\n            className: \"sidebar-mini-icon\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, prop.mini), React.createElement(\"span\", {\n            className: \"sidebar-normal\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, prop.name, React.createElement(\"b\", {\n            className: \"caret\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          })))), React.createElement(Collapse, {\n            isOpen: _this.state[prop.state],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, React.createElement(\"ul\", {\n            className: \"nav\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, _this.createLinks(prop.views))));\n        }\n\n        return React.createElement(\"li\", {\n          className: _this.activeRoute(prop.layout + prop.path),\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: prop.layout + prop.path,\n          activeClassName: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, prop.icon !== undefined ? React.createElement(React.Fragment, null, React.createElement(\"i\", {\n          className: prop.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, prop.name)) : React.createElement(React.Fragment, null, React.createElement(\"span\", {\n          className: \"sidebar-mini-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, prop.mini), React.createElement(\"span\", {\n          className: \"sidebar-normal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, prop.name))));\n      });\n    };\n\n    _this.activeRoute = function (routeName) {\n      return _this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n    };\n\n    _this.state = _this.getCollapseStates(props.routes);\n    return _this;\n  } // this creates the intial state of this component based on the collapse routes\n  // that it gets through this.props.routes\n\n\n  _createClass(Sidebar, [{\n    key: \"getCollapseInitialState\",\n    // this verifies if any of the collapses should be default opened on a rerender of this component\n    // for example, on the refresh of the page,\n    // while on the src/views/forms/RegularForms.jsx - route /admin/regular-forms\n    value: function getCollapseInitialState(routes) {\n      for (var i = 0; i < routes.length; i++) {\n        if (routes[i].collapse && this.getCollapseInitialState(routes[i].views)) {\n          return true;\n        } else if (window.location.pathname.indexOf(routes[i].path) !== -1) {\n          return true;\n        }\n      }\n\n      return false;\n    } // this function creates the links and collapses that appear in the sidebar (left menu)\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // if you are using a Windows Machine, the scrollbars will have a Mac look\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps = new PerfectScrollbar(this.refs.sidebar, {\n          suppressScrollX: true,\n          suppressScrollY: false\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // we need to destroy the false scrollbar when we navigate\n      // to a page that doesn't have this component rendered\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"sidebar\",\n        \"data-color\": this.props.bgColor,\n        \"data-active-color\": this.props.activeColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"\",\n        className: \"simple-text logo-mini\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"logo-img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        alt: \"react-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }))), React.createElement(\"a\", {\n        href: \" \",\n        className: \"simple-text logo-normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"SLAES\")), React.createElement(\"div\", {\n        className: \"sidebar-wrapper\",\n        ref: \"sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: avatar,\n        alt: \"Avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        \"data-toggle\": \"collapse\",\n        \"aria-expanded\": this.state.openAvatar,\n        onClick: function onClick() {\n          return _this2.setState({\n            openAvatar: !_this2.state.openAvatar\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"William Clark\")))), React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, this.createLinks(this.props.routes))));\n    }\n  }]);\n\n  return Sidebar;\n}(React.Component);\n\nexport default Sidebar;","map":{"version":3,"sources":["/home/ubuntu/SLAES/src/components/Sidebar/Sidebar.jsx"],"names":["React","NavLink","Nav","Collapse","PerfectScrollbar","avatar","logo","ps","Sidebar","props","getCollapseStates","routes","initialState","map","prop","key","collapse","state","getCollapseInitialState","views","createLinks","redirect","st","e","preventDefault","setState","icon","undefined","name","mini","activeRoute","layout","path","routeName","location","pathname","indexOf","i","length","window","navigator","platform","refs","sidebar","suppressScrollX","suppressScrollY","destroy","bgColor","activeColor","openAvatar","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav, Collapse } from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport avatar from \"assets/img/faces/ahealth.png\";\nimport logo from \"assets/img/react-logo.png\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getCollapseStates(props.routes);\n  }\n  // this creates the intial state of this component based on the collapse routes\n  // that it gets through this.props.routes\n  getCollapseStates = routes => {\n    let initialState = {};\n    routes.map((prop, key) => {\n      if (prop.collapse) {\n        initialState = {\n          [prop.state]: this.getCollapseInitialState(prop.views),\n          ...this.getCollapseStates(prop.views),\n          ...initialState\n        };\n      }\n      return null;\n    });\n    return initialState;\n  };\n  // this verifies if any of the collapses should be default opened on a rerender of this component\n  // for example, on the refresh of the page,\n  // while on the src/views/forms/RegularForms.jsx - route /admin/regular-forms\n  getCollapseInitialState(routes) {\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse && this.getCollapseInitialState(routes[i].views)) {\n        return true;\n      } else if (window.location.pathname.indexOf(routes[i].path) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n  // this function creates the links and collapses that appear in the sidebar (left menu)\n  createLinks = routes => {\n    return routes.map((prop, key) => {\n      if (prop.redirect) {\n        return null;\n      }\n      if (prop.collapse) {\n        var st = {};\n        st[prop[\"state\"]] = !this.state[prop.state];\n        return (\n          <li\n            className={this.getCollapseInitialState(prop.views) ? \"active\" : \"\"}\n            key={key}\n          >\n            <a\n              href=\"#pablo\"\n              data-toggle=\"collapse\"\n              aria-expanded={this.state[prop.state]}\n              onClick={e => {\n                e.preventDefault();\n                this.setState(st);\n              }}\n            >\n              {prop.icon !== undefined ? (\n                <>\n                  <i className={prop.icon} />\n                  <p>\n                    {prop.name}\n                    <b className=\"caret\" />\n                  </p>\n                </>\n              ) : (\n                <>\n                  <span className=\"sidebar-mini-icon\">{prop.mini}</span>\n                  <span className=\"sidebar-normal\">\n                    {prop.name}\n                    <b className=\"caret\" />\n                  </span>\n                </>\n              )}\n            </a>\n            <Collapse isOpen={this.state[prop.state]}>\n              <ul className=\"nav\">{this.createLinks(prop.views)}</ul>\n            </Collapse>\n          </li>\n        );\n      }\n      return (\n        <li className={this.activeRoute(prop.layout + prop.path)} key={key}>\n          <NavLink to={prop.layout + prop.path} activeClassName=\"\">\n            {prop.icon !== undefined ? (\n              <>\n                <i className={prop.icon} />\n                <p>{prop.name}</p>\n              </>\n            ) : (\n              <>\n                <span className=\"sidebar-mini-icon\">{prop.mini}</span>\n                <span className=\"sidebar-normal\">{prop.name}</span>\n              </>\n            )}\n          </NavLink>\n        </li>\n      );\n    });\n  };\n  // verifies if routeName is the one active (in browser input)\n  activeRoute = routeName => {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  componentDidMount() {\n    // if you are using a Windows Machine, the scrollbars will have a Mac look\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    // we need to destroy the false scrollbar when we navigate\n    // to a page that doesn't have this component rendered\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    return (\n      <div\n        className=\"sidebar\"\n        data-color={this.props.bgColor}\n        data-active-color={this.props.activeColor}\n      >\n        <div className=\"logo\">\n          <a\n            href=\"\"\n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"react-logo\" />\n            </div>\n          </a>\n          <a\n            href=\" \"\n            className=\"simple-text logo-normal\"\n          >\n          SLAES\n          </a>\n        </div>\n\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          <div className=\"user\">\n            <div className=\"photo\">\n              <img src={avatar} alt=\"Avatar\" />\n            </div>\n            <div className=\"info\">\n              <a\n                href=\"#\"\n                data-toggle=\"collapse\"\n                aria-expanded={this.state.openAvatar}\n                onClick={() =>\n                  this.setState({ openAvatar: !this.state.openAvatar })\n                }\n              >\n                <span>\n                  William Clark\n                </span>\n              </a>\n            </div>\n          </div>\n          <Nav>{this.createLinks(this.props.routes)}</Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}