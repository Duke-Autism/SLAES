{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/SLAES/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/SLAES/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/SLAES/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/SLAES/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/SLAES/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/SLAES/client/src/layouts/Admin/Admin.jsx\";\nimport React from \"react\"; // javascript plugin used to create scrollbars on windows\n// import PerfectScrollbar from \"perfect-scrollbar\";\n\nimport { Route, Switch } from \"react-router-dom\";\nimport AdminNavbar from \"./components/Navbars/AdminNavbar.jsx\";\nimport Footer from \"./components/Footer/Footer.jsx\";\nimport Sidebar from \"../components/Sidebar/Sidebar.jsx\";\nimport routes from \"routes.js\";\nvar ps;\n\nvar Admin =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Admin, _React$Component);\n\n  function Admin(props) {\n    var _this;\n\n    _classCallCheck(this, Admin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Admin).call(this, props));\n\n    _this.getRoutes = function (routes) {\n      return routes.map(function (prop, key) {\n        if (prop.collapse) {\n          return _this.getRoutes(prop.views);\n        }\n\n        if (prop.layout === \"/admin\") {\n          return React.createElement(Route, {\n            path: prop.layout + prop.path,\n            component: prop.component,\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          });\n        } else {\n          return null;\n        }\n      });\n    };\n\n    _this.handleActiveClick = function (color) {\n      _this.setState({\n        activeColor: color\n      });\n    };\n\n    _this.handleBgClick = function (color) {\n      _this.setState({\n        backgroundColor: color\n      });\n    };\n\n    _this.handleMiniClick = function () {\n      if (document.body.classList.contains(\"sidebar-mini\")) {\n        _this.setState({\n          sidebarMini: false\n        });\n      } else {\n        _this.setState({\n          sidebarMini: true\n        });\n      }\n\n      document.body.classList.toggle(\"sidebar-mini\");\n    };\n\n    _this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n      sidebarMini: false\n    };\n    return _this;\n  } // componentDidMount() {\n  //   if (navigator.platform.indexOf(\"Win\") > -1) {\n  //     document.documentElement.className += \" perfect-scrollbar-on\";\n  //     document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n  //     ps = new PerfectScrollbar(this.refs.mainPanel);\n  //   }\n  // }\n  // componentWillUnmount() {\n  //   if (navigator.platform.indexOf(\"Win\") > -1) {\n  //     ps.destroy();\n  //     document.documentElement.className += \" perfect-scrollbar-off\";\n  //     document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n  //   }\n  // }\n  // componentDidUpdate(e) {\n  //   if (e.history.action === \"PUSH\") {\n  //     document.documentElement.scrollTop = 0;\n  //     document.scrollingElement.scrollTop = 0;\n  //     this.refs.mainPanel.scrollTop = 0;\n  //   }\n  // }\n\n\n  _createClass(Admin, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Sidebar, Object.assign({}, this.props, {\n        routes: routes,\n        bgColor: this.state.backgroundColor,\n        activeColor: this.state.activeColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"main-panel\",\n        ref: \"mainPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(AdminNavbar, Object.assign({}, this.props, {\n        handleMiniClick: this.handleMiniClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.getRoutes(routes)), // we don't want the Footer to be rendered on full screen maps page\n      this.props.location.pathname.indexOf(\"full-screen-map\") !== -1 ? null : React.createElement(Footer, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Admin;\n}(React.Component);\n\nexport default Admin;","map":{"version":3,"sources":["/home/ubuntu/SLAES/client/src/layouts/Admin/Admin.jsx"],"names":["React","Route","Switch","AdminNavbar","Footer","Sidebar","routes","ps","Admin","props","getRoutes","map","prop","key","collapse","views","layout","path","component","handleActiveClick","color","setState","activeColor","handleBgClick","backgroundColor","handleMiniClick","document","body","classList","contains","sidebarMini","toggle","state","location","pathname","indexOf","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n// javascript plugin used to create scrollbars on windows\n// import PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport AdminNavbar from \"./components/Navbars/AdminNavbar.jsx\";\nimport Footer from \"./components/Footer/Footer.jsx\";\nimport Sidebar from \"../components/Sidebar/Sidebar.jsx\";\n\nimport routes from \"routes.js\";\n\nvar ps;\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n      sidebarMini: false\n    };\n  }\n  // componentDidMount() {\n  //   if (navigator.platform.indexOf(\"Win\") > -1) {\n  //     document.documentElement.className += \" perfect-scrollbar-on\";\n  //     document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n  //     ps = new PerfectScrollbar(this.refs.mainPanel);\n  //   }\n  // }\n  // componentWillUnmount() {\n  //   if (navigator.platform.indexOf(\"Win\") > -1) {\n  //     ps.destroy();\n  //     document.documentElement.className += \" perfect-scrollbar-off\";\n  //     document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n  //   }\n  // }\n  // componentDidUpdate(e) {\n  //   if (e.history.action === \"PUSH\") {\n  //     document.documentElement.scrollTop = 0;\n  //     document.scrollingElement.scrollTop = 0;\n  //     this.refs.mainPanel.scrollTop = 0;\n  //   }\n  // }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return this.getRoutes(prop.views);\n      }\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  handleActiveClick = color => {\n    this.setState({ activeColor: color });\n  };\n  handleBgClick = color => {\n    this.setState({ backgroundColor: color });\n  };\n  handleMiniClick = () => {\n    if (document.body.classList.contains(\"sidebar-mini\")) {\n      this.setState({ sidebarMini: false });\n    } else {\n      this.setState({ sidebarMini: true });\n    }\n    document.body.classList.toggle(\"sidebar-mini\");\n  };\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={routes}\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n        />\n        <div className=\"main-panel\" ref=\"mainPanel\">\n          <AdminNavbar {...this.props} handleMiniClick={this.handleMiniClick} />\n          <Switch>{this.getRoutes(routes)}</Switch>\n          {// we don't want the Footer to be rendered on full screen maps page\n          this.props.location.pathname.indexOf(\"full-screen-map\") !==\n          -1 ? null : (\n            <Footer fluid />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}